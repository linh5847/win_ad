---
- name: Set Password
  win_user:
    name: administrator
    password: "{{ recovery_password }}"
    state: present
  ignore_errors: True

- name: Enable ms_tcpip6 of all the Interface
  community.windows.win_net_adapter_feature:
    interface: '*'
    state: disabled
    component_id:
      - ms_tcpip6

- name: Set static IP address
  win_shell: "(new-netipaddress -InterfaceAlias Ethernet2 -IPAddress {{ ip_address }} -prefixlength {{ netmask_cidr }} -defaultgateway {{ gateway }})"
  delegate_to: '{{ ip_address }}'
  ignore_errors: True
  when: inventory_hostname in groups["ad"]

- name: Set upstream DNS server.
  win_dns_client:
    adapter_names: '*'
    ipv4_addresses:
    - '{{ upstream_dns_1 }}'
    - '{{ upstream_dns_2 }}'
    - '{{ ip_address }}'
    - '192.168.56.1'

- name: Stop the time service.
  win_service:
    name: w32time
    state: stopped

- name: Check Windows temp directory exists.
  win_stat:
    path: c:\temp
  register: tempdir

- name: Create Windows temp directory if not existed.
  win_file:
    path: c:\temp
    state: directory
  when: tempdir.stat.exists == False

- name: Set NTP Servers.
  win_shell: w32tm /config /syncfromflags:manual /manualpeerlist:"{{ ntp_servers }}" > c:\temp\ntp_server.log
  args:
    chdir: C:\temp
    creates: C:\ntp_server.log
  
- name: Start the time service.
  win_service:
    name: w32time
    state: started

- name: Disable Windows local Firewall ready to setup Windows Domain.
  win_firewall:
    profiles:
    - Domain
    - Private
    - Public
    state: disabled

- name: Change the hostname 
  win_hostname:
    name: '{{ dc_hostname }}'
  register: res

- name: Reboot
  win_reboot:
  when: res.reboot_required

- name: Install Windows Features and Role ready for creating a Windows Domain.
  win_feature:
    name: AD-Domain-Services
    state: present
    include_sub_features: True
    include_management_tools: True

- name: Create new domain in a new forest on the target host and reboot.
  microsoft.ad.domain:
    dns_domain_name: "{{ domain_name }}"
    safe_mode_password: "{{ recovery_password }}"
  register: domain_install

- name: Reboot new Windows DC.
  win_reboot:
    msg: "Installing AD. Rebooting..."
    pre_reboot_delay: 15
  when: domain_install.reboot_required and inventory_hostname in groups["ad"]

# - name: Set internal DNS server 
#   win_dns_client:
#     adapter_names: '*'
#     ipv4_addresses:
#     - '{{ ip_address }}'
#     - '{{ upstream_dns_1 }}'
#     - '{{ upstream_dns_2 }}'


- name: Check for xRemoteDesktopAdmin Powershell module.
  win_psmodule:
    name: xRemoteDesktopAdmin
    state: present

- name: Enable Remote Desktop.
  win_dsc:
    resource_name: xRemoteDesktopAdmin
    Ensure: present
    UserAuthentication: NonSecure

- name: List Domain Controllers in Domain.
  win_shell: "nltest /dclist:{{ domain_name }}"
  register: domain_list

- debug:
    var: domain_list
